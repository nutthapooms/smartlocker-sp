{"ast":null,"code":"import _classCallCheck from \"C:/Users/nsuwanw/Desktop/smartlocker-sp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/nsuwanw/Desktop/smartlocker-sp/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var DataService = /*#__PURE__*/(function () {\n  var DataService = /*#__PURE__*/function () {\n    function DataService(http) {\n      _classCallCheck(this, DataService);\n\n      this.http = http;\n      this.LockerName = new BehaviorSubject('80017');\n      this.currentLocker = this.LockerName.asObservable();\n      this.LockerSecret = new BehaviorSubject('dummy');\n      this.currentLockerSecret = this.LockerSecret.asObservable();\n      this.badgeIdSource = new BehaviorSubject('_');\n      this.currentBadgeId = this.badgeIdSource.asObservable();\n      this.messageSource = new BehaviorSubject('Default message');\n      this.currentMessage = this.messageSource.asObservable();\n      this.langSource = new BehaviorSubject('eng');\n      this.currentLanguage = this.langSource.asObservable();\n      this.token = new BehaviorSubject('no token');\n      this.currentToken = this.token.asObservable();\n    }\n\n    _createClass(DataService, [{\n      key: \"changeMessage\",\n      value: function changeMessage(message) {\n        this.messageSource.next(message);\n      }\n    }, {\n      key: \"changeSecret\",\n      value: function changeSecret(message) {\n        this.LockerSecret.next(message);\n      }\n    }, {\n      key: \"changeToken\",\n      value: function changeToken(message) {\n        this.token.next(message);\n      }\n    }, {\n      key: \"changeLanguage\",\n      value: function changeLanguage(message) {\n        this.langSource.next(message);\n      }\n    }, {\n      key: \"changeBadgeId\",\n      value: function changeBadgeId(message) {\n        this.badgeIdSource.next(message);\n      }\n    }]);\n\n    return DataService;\n  }();\n\n  DataService.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  DataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac\n  });\n  return DataService;\n})();","map":null,"metadata":{},"sourceType":"module"}