{"ast":null,"code":"import _classCallCheck from \"C:/Users/nsuwanw/Desktop/smartlocker-sp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/nsuwanw/Desktop/smartlocker-sp/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as i0 from '@angular/core';\nimport { Pipe, EventEmitter, InjectionToken, Optional, Inject, NgModule } from '@angular/core';\nimport moment from 'moment';\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\nvar AddPipe = /*#__PURE__*/(function () {\n  var AddPipe = /*#__PURE__*/function () {\n    function AddPipe() {\n      _classCallCheck(this, AddPipe);\n    }\n\n    _createClass(AddPipe, [{\n      key: \"transform\",\n      value: function transform(value, amount, unit) {\n        if (typeof amount === 'undefined' || typeof amount === 'number' && typeof unit === 'undefined') {\n          throw new Error('AddPipe: missing required arguments');\n        }\n\n        return moment(value).add(amount, unit);\n      }\n    }]);\n\n    return AddPipe;\n  }();\n\n  AddPipe.ɵfac = function AddPipe_Factory(t) {\n    return new (t || AddPipe)();\n  };\n\n  AddPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"amAdd\",\n    type: AddPipe,\n    pure: true\n  });\n  return AddPipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\n\nvar CalendarPipe = /*#__PURE__*/(function () {\n  var CalendarPipe = /*#__PURE__*/function () {\n    function CalendarPipe(cdRef, ngZone) {\n      var _this = this;\n\n      _classCallCheck(this, CalendarPipe);\n\n      this.cdRef = cdRef;\n      this.ngZone = ngZone; // using a single static timer for all instances of this pipe for performance reasons\n\n      CalendarPipe.initTimer(ngZone);\n      CalendarPipe.refs++; // values such as Today will need to be replaced with Yesterday after midnight,\n      // so make sure we subscribe to an EventEmitter that we set up to emit at midnight\n\n      this.midnightSub = CalendarPipe.midnight.subscribe(function () {\n        _this.ngZone.run(function () {\n          return _this.cdRef.markForCheck();\n        });\n      });\n    }\n\n    _createClass(CalendarPipe, [{\n      key: \"transform\",\n      value: function transform(value) {\n        var formats = null;\n        var referenceTime = null;\n\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        for (var i = 0, len = args.length; i < len; i++) {\n          if (args[i] !== null) {\n            if (typeof args[i] === 'object' && !moment.isMoment(args[i])) {\n              formats = args[i];\n            } else {\n              referenceTime = moment(args[i]);\n            }\n          }\n        }\n\n        return moment(value).calendar(referenceTime, formats);\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (CalendarPipe.refs > 0) {\n          CalendarPipe.refs--;\n        }\n\n        if (CalendarPipe.refs === 0) {\n          CalendarPipe.removeTimer();\n        }\n\n        this.midnightSub.unsubscribe();\n      }\n    }], [{\n      key: \"initTimer\",\n      value: function initTimer(ngZone) {\n        // initialize the timer\n        if (!CalendarPipe.midnight) {\n          CalendarPipe.midnight = new EventEmitter();\n\n          if (typeof window !== 'undefined') {\n            var timeToUpdate = CalendarPipe._getMillisecondsUntilUpdate();\n\n            CalendarPipe.timer = ngZone.runOutsideAngular(function () {\n              return window.setTimeout(function () {\n                // emit the current date\n                CalendarPipe.midnight.emit(new Date()); // refresh the timer\n\n                CalendarPipe.removeTimer();\n                CalendarPipe.initTimer(ngZone);\n              }, timeToUpdate);\n            });\n          }\n        }\n      }\n    }, {\n      key: \"removeTimer\",\n      value: function removeTimer() {\n        if (CalendarPipe.timer) {\n          window.clearTimeout(CalendarPipe.timer);\n          CalendarPipe.timer = null;\n          CalendarPipe.midnight = null;\n        }\n      }\n    }, {\n      key: \"_getMillisecondsUntilUpdate\",\n      value: function _getMillisecondsUntilUpdate() {\n        var now = moment();\n        var tomorrow = moment().startOf('day').add(1, 'days');\n        var timeToMidnight = tomorrow.valueOf() - now.valueOf();\n        return timeToMidnight + 1000; // 1 second after midnight\n      }\n    }]);\n\n    return CalendarPipe;\n  }();\n\n  /**\r\n   * Internal reference counter, so we can clean up when no instances are in use\r\n   */\n  CalendarPipe.refs = 0;\n  CalendarPipe.timer = null;\n  CalendarPipe.midnight = null;\n\n  CalendarPipe.ɵfac = function CalendarPipe_Factory(t) {\n    return new (t || CalendarPipe)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef, 16), i0.ɵɵdirectiveInject(i0.NgZone, 16));\n  };\n\n  CalendarPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"amCalendar\",\n    type: CalendarPipe,\n    pure: false\n  });\n  return CalendarPipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\n\nvar DateFormatPipe = /*#__PURE__*/(function () {\n  var DateFormatPipe = /*#__PURE__*/function () {\n    function DateFormatPipe() {\n      _classCallCheck(this, DateFormatPipe);\n    }\n\n    _createClass(DateFormatPipe, [{\n      key: \"transform\",\n      value: function transform(value) {\n        if (!value) {\n          return '';\n        }\n\n        return moment(value).format(arguments.length <= 1 ? undefined : arguments[1]);\n      }\n    }]);\n\n    return DateFormatPipe;\n  }();\n\n  DateFormatPipe.ɵfac = function DateFormatPipe_Factory(t) {\n    return new (t || DateFormatPipe)();\n  };\n\n  DateFormatPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"amDateFormat\",\n    type: DateFormatPipe,\n    pure: true\n  });\n  return DateFormatPipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\n\nvar DifferencePipe = /*#__PURE__*/(function () {\n  var DifferencePipe = /*#__PURE__*/function () {\n    function DifferencePipe() {\n      _classCallCheck(this, DifferencePipe);\n    }\n\n    _createClass(DifferencePipe, [{\n      key: \"transform\",\n      value: function transform(value, otherValue, unit, precision) {\n        var date = moment(value);\n        var date2 = otherValue !== null ? moment(otherValue) : moment();\n        return date.diff(date2, unit, precision);\n      }\n    }]);\n\n    return DifferencePipe;\n  }();\n\n  DifferencePipe.ɵfac = function DifferencePipe_Factory(t) {\n    return new (t || DifferencePipe)();\n  };\n\n  DifferencePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"amDifference\",\n    type: DifferencePipe,\n    pure: true\n  });\n  return DifferencePipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar NGX_MOMENT_OPTIONS = new InjectionToken('NGX_MOMENT_OPTIONS');\nvar DurationPipe = /*#__PURE__*/(function () {\n  var DurationPipe = /*#__PURE__*/function () {\n    function DurationPipe(momentOptions) {\n      _classCallCheck(this, DurationPipe);\n\n      this.allowedUnits = ['ss', 's', 'm', 'h', 'd', 'M'];\n\n      this._applyOptions(momentOptions);\n    }\n\n    _createClass(DurationPipe, [{\n      key: \"transform\",\n      value: function transform(value) {\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n\n        if (typeof args === 'undefined' || args.length !== 1) {\n          throw new Error('DurationPipe: missing required time unit argument');\n        }\n\n        return moment.duration(value, args[0]).humanize();\n      }\n    }, {\n      key: \"_applyOptions\",\n      value: function _applyOptions(momentOptions) {\n        var _this2 = this;\n\n        if (!momentOptions) {\n          return;\n        }\n\n        if (!!momentOptions.relativeTimeThresholdOptions) {\n          var units = Object.keys(momentOptions.relativeTimeThresholdOptions);\n          var filteredUnits = units.filter(function (unit) {\n            return _this2.allowedUnits.indexOf(unit) !== -1;\n          });\n          filteredUnits.forEach(function (unit) {\n            moment.relativeTimeThreshold(unit, momentOptions.relativeTimeThresholdOptions[unit]);\n          });\n        }\n      }\n    }]);\n\n    return DurationPipe;\n  }();\n\n  DurationPipe.ɵfac = function DurationPipe_Factory(t) {\n    return new (t || DurationPipe)(i0.ɵɵdirectiveInject(NGX_MOMENT_OPTIONS, 24));\n  };\n\n  DurationPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"amDuration\",\n    type: DurationPipe,\n    pure: true\n  });\n  return DurationPipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\n\nvar FromUnixPipe = /*#__PURE__*/(function () {\n  var FromUnixPipe = /*#__PURE__*/function () {\n    function FromUnixPipe() {\n      _classCallCheck(this, FromUnixPipe);\n    }\n\n    _createClass(FromUnixPipe, [{\n      key: \"transform\",\n      value: function transform(value) {\n        return typeof value === 'string' ? moment.unix(parseInt(value, 10)) : moment.unix(value);\n      }\n    }]);\n\n    return FromUnixPipe;\n  }();\n\n  FromUnixPipe.ɵfac = function FromUnixPipe_Factory(t) {\n    return new (t || FromUnixPipe)();\n  };\n\n  FromUnixPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"amFromUnix\",\n    type: FromUnixPipe,\n    pure: true\n  });\n  return FromUnixPipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar ParsePipe = /*#__PURE__*/(function () {\n  var ParsePipe = /*#__PURE__*/function () {\n    function ParsePipe() {\n      _classCallCheck(this, ParsePipe);\n    }\n\n    _createClass(ParsePipe, [{\n      key: \"transform\",\n      value: function transform(value, formats) {\n        return moment(value, formats);\n      }\n    }]);\n\n    return ParsePipe;\n  }();\n\n  ParsePipe.ɵfac = function ParsePipe_Factory(t) {\n    return new (t || ParsePipe)();\n  };\n\n  ParsePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"amParse\",\n    type: ParsePipe,\n    pure: true\n  });\n  return ParsePipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\n\nvar FromUtcPipe = /*#__PURE__*/(function () {\n  var FromUtcPipe = /*#__PURE__*/function () {\n    function FromUtcPipe() {\n      _classCallCheck(this, FromUtcPipe);\n    }\n\n    _createClass(FromUtcPipe, [{\n      key: \"transform\",\n      value: function transform(value, formats) {\n        return formats ? moment.utc(value, formats) : moment.utc(value);\n      }\n    }]);\n\n    return FromUtcPipe;\n  }();\n\n  FromUtcPipe.ɵfac = function FromUtcPipe_Factory(t) {\n    return new (t || FromUtcPipe)();\n  };\n\n  FromUtcPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"amFromUtc\",\n    type: FromUtcPipe,\n    pure: true\n  });\n  return FromUtcPipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar IsAfterPipe = /*#__PURE__*/(function () {\n  var IsAfterPipe = /*#__PURE__*/function () {\n    function IsAfterPipe() {\n      _classCallCheck(this, IsAfterPipe);\n    }\n\n    _createClass(IsAfterPipe, [{\n      key: \"transform\",\n      value: function transform(value, otherValue, unit) {\n        return moment(value).isAfter(moment(otherValue), unit);\n      }\n    }]);\n\n    return IsAfterPipe;\n  }();\n\n  IsAfterPipe.ɵfac = function IsAfterPipe_Factory(t) {\n    return new (t || IsAfterPipe)();\n  };\n\n  IsAfterPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"amIsAfter\",\n    type: IsAfterPipe,\n    pure: true\n  });\n  return IsAfterPipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar IsBeforePipe = /*#__PURE__*/(function () {\n  var IsBeforePipe = /*#__PURE__*/function () {\n    function IsBeforePipe() {\n      _classCallCheck(this, IsBeforePipe);\n    }\n\n    _createClass(IsBeforePipe, [{\n      key: \"transform\",\n      value: function transform(value, otherValue, unit) {\n        return moment(value).isBefore(moment(otherValue), unit);\n      }\n    }]);\n\n    return IsBeforePipe;\n  }();\n\n  IsBeforePipe.ɵfac = function IsBeforePipe_Factory(t) {\n    return new (t || IsBeforePipe)();\n  };\n\n  IsBeforePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"amIsBefore\",\n    type: IsBeforePipe,\n    pure: true\n  });\n  return IsBeforePipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar LocalTimePipe = /*#__PURE__*/(function () {\n  var LocalTimePipe = /*#__PURE__*/function () {\n    function LocalTimePipe() {\n      _classCallCheck(this, LocalTimePipe);\n    }\n\n    _createClass(LocalTimePipe, [{\n      key: \"transform\",\n      value: function transform(value) {\n        return moment(value).local();\n      }\n    }]);\n\n    return LocalTimePipe;\n  }();\n\n  LocalTimePipe.ɵfac = function LocalTimePipe_Factory(t) {\n    return new (t || LocalTimePipe)();\n  };\n\n  LocalTimePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"amLocal\",\n    type: LocalTimePipe,\n    pure: true\n  });\n  return LocalTimePipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar LocalePipe = /*#__PURE__*/(function () {\n  var LocalePipe = /*#__PURE__*/function () {\n    function LocalePipe() {\n      _classCallCheck(this, LocalePipe);\n    }\n\n    _createClass(LocalePipe, [{\n      key: \"transform\",\n      value: function transform(value, locale) {\n        return moment(value).locale(locale);\n      }\n    }]);\n\n    return LocalePipe;\n  }();\n\n  LocalePipe.ɵfac = function LocalePipe_Factory(t) {\n    return new (t || LocalePipe)();\n  };\n\n  LocalePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"amLocale\",\n    type: LocalePipe,\n    pure: true\n  });\n  return LocalePipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar ParseZonePipe = /*#__PURE__*/(function () {\n  var ParseZonePipe = /*#__PURE__*/function () {\n    function ParseZonePipe() {\n      _classCallCheck(this, ParseZonePipe);\n    }\n\n    _createClass(ParseZonePipe, [{\n      key: \"transform\",\n      value: function transform(value) {\n        return moment.parseZone(value);\n      }\n    }]);\n\n    return ParseZonePipe;\n  }();\n\n  ParseZonePipe.ɵfac = function ParseZonePipe_Factory(t) {\n    return new (t || ParseZonePipe)();\n  };\n\n  ParseZonePipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"amParseZone\",\n    type: ParseZonePipe,\n    pure: true\n  });\n  return ParseZonePipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\n\nvar SubtractPipe = /*#__PURE__*/(function () {\n  var SubtractPipe = /*#__PURE__*/function () {\n    function SubtractPipe() {\n      _classCallCheck(this, SubtractPipe);\n    }\n\n    _createClass(SubtractPipe, [{\n      key: \"transform\",\n      value: function transform(value, amount, unit) {\n        if (typeof amount === 'undefined' || typeof amount === 'number' && typeof unit === 'undefined') {\n          throw new Error('SubtractPipe: missing required arguments');\n        }\n\n        return moment(value).subtract(amount, unit);\n      }\n    }]);\n\n    return SubtractPipe;\n  }();\n\n  SubtractPipe.ɵfac = function SubtractPipe_Factory(t) {\n    return new (t || SubtractPipe)();\n  };\n\n  SubtractPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"amSubtract\",\n    type: SubtractPipe,\n    pure: true\n  });\n  return SubtractPipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/* ngx-moment (c) 2015, 2016 Uri Shaked / MIT Licence */\n\n\nvar TimeAgoPipe = /*#__PURE__*/(function () {\n  var TimeAgoPipe = /*#__PURE__*/function () {\n    function TimeAgoPipe(cdRef, ngZone) {\n      _classCallCheck(this, TimeAgoPipe);\n\n      this.cdRef = cdRef;\n      this.ngZone = ngZone;\n    }\n\n    _createClass(TimeAgoPipe, [{\n      key: \"format\",\n      value: function format(m) {\n        return m.from(moment(), this.lastOmitSuffix);\n      }\n    }, {\n      key: \"transform\",\n      value: function transform(value, omitSuffix, formatFn) {\n        if (this.hasChanged(value, omitSuffix)) {\n          this.lastTime = this.getTime(value);\n          this.lastValue = value;\n          this.lastOmitSuffix = omitSuffix;\n          this.lastLocale = this.getLocale(value);\n          this.formatFn = formatFn || this.format.bind(this);\n          this.removeTimer();\n          this.createTimer();\n          this.lastText = this.formatFn(moment(value));\n        } else {\n          this.createTimer();\n        }\n\n        return this.lastText;\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.removeTimer();\n      }\n    }, {\n      key: \"createTimer\",\n      value: function createTimer() {\n        var _this3 = this;\n\n        if (this.currentTimer) {\n          return;\n        }\n\n        var momentInstance = moment(this.lastValue);\n        var timeToUpdate = this.getSecondsUntilUpdate(momentInstance) * 1000;\n        this.currentTimer = this.ngZone.runOutsideAngular(function () {\n          if (typeof window !== 'undefined') {\n            return window.setTimeout(function () {\n              _this3.lastText = _this3.formatFn(moment(_this3.lastValue));\n              _this3.currentTimer = null;\n\n              _this3.ngZone.run(function () {\n                return _this3.cdRef.markForCheck();\n              });\n            }, timeToUpdate);\n          } else {\n            return null;\n          }\n        });\n      }\n    }, {\n      key: \"removeTimer\",\n      value: function removeTimer() {\n        if (this.currentTimer) {\n          window.clearTimeout(this.currentTimer);\n          this.currentTimer = null;\n        }\n      }\n    }, {\n      key: \"getSecondsUntilUpdate\",\n      value: function getSecondsUntilUpdate(momentInstance) {\n        var howOld = Math.abs(moment().diff(momentInstance, 'minute'));\n\n        if (howOld < 1) {\n          return 1;\n        } else if (howOld < 60) {\n          return 30;\n        } else if (howOld < 180) {\n          return 300;\n        } else {\n          return 3600;\n        }\n      }\n    }, {\n      key: \"hasChanged\",\n      value: function hasChanged(value, omitSuffix) {\n        return this.getTime(value) !== this.lastTime || this.getLocale(value) !== this.lastLocale || omitSuffix !== this.lastOmitSuffix;\n      }\n    }, {\n      key: \"getTime\",\n      value: function getTime(value) {\n        if (moment.isDate(value)) {\n          return value.getTime();\n        } else if (moment.isMoment(value)) {\n          return value.valueOf();\n        } else {\n          return moment(value).valueOf();\n        }\n      }\n    }, {\n      key: \"getLocale\",\n      value: function getLocale(value) {\n        return moment.isMoment(value) ? value.locale() : moment.locale();\n      }\n    }]);\n\n    return TimeAgoPipe;\n  }();\n\n  TimeAgoPipe.ɵfac = function TimeAgoPipe_Factory(t) {\n    return new (t || TimeAgoPipe)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef, 16), i0.ɵɵdirectiveInject(i0.NgZone, 16));\n  };\n\n  TimeAgoPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"amTimeAgo\",\n    type: TimeAgoPipe,\n    pure: false\n  });\n  return TimeAgoPipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar UtcPipe = /*#__PURE__*/(function () {\n  var UtcPipe = /*#__PURE__*/function () {\n    function UtcPipe() {\n      _classCallCheck(this, UtcPipe);\n    }\n\n    _createClass(UtcPipe, [{\n      key: \"transform\",\n      value: function transform(value) {\n        return moment(value).utc();\n      }\n    }]);\n\n    return UtcPipe;\n  }();\n\n  UtcPipe.ɵfac = function UtcPipe_Factory(t) {\n    return new (t || UtcPipe)();\n  };\n\n  UtcPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"amUtc\",\n    type: UtcPipe,\n    pure: true\n  });\n  return UtcPipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar ANGULAR_MOMENT_PIPES = [AddPipe, CalendarPipe, DateFormatPipe, DifferencePipe, DurationPipe, FromUnixPipe, ParsePipe, SubtractPipe, TimeAgoPipe, UtcPipe, FromUtcPipe, LocalTimePipe, LocalePipe, ParseZonePipe, IsBeforePipe, IsAfterPipe];\nvar MomentModule = /*#__PURE__*/(function () {\n  var MomentModule = /*#__PURE__*/function () {\n    function MomentModule() {\n      _classCallCheck(this, MomentModule);\n    }\n\n    _createClass(MomentModule, null, [{\n      key: \"forRoot\",\n      value: function forRoot(options) {\n        return {\n          ngModule: MomentModule,\n          providers: [{\n            provide: NGX_MOMENT_OPTIONS,\n            useValue: Object.assign({}, options)\n          }]\n        };\n      }\n    }]);\n\n    return MomentModule;\n  }();\n\n  MomentModule.ɵfac = function MomentModule_Factory(t) {\n    return new (t || MomentModule)();\n  };\n\n  MomentModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MomentModule\n  });\n  MomentModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return MomentModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { AddPipe, CalendarPipe, DateFormatPipe, DifferencePipe, DurationPipe, FromUnixPipe, FromUtcPipe, IsAfterPipe, IsBeforePipe, LocalTimePipe, LocalePipe, MomentModule, NGX_MOMENT_OPTIONS, ParsePipe, ParseZonePipe, SubtractPipe, TimeAgoPipe, UtcPipe }; //# sourceMappingURL=ngx-moment.mjs.map","map":null,"metadata":{},"sourceType":"module"}