{"ast":null,"code":"import _classCallCheck from \"C:/Users/nsuwanw/Desktop/smartlocker-sp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/nsuwanw/Desktop/smartlocker-sp/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpResponse } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nexport var AuthInterceptorService = /*#__PURE__*/function () {\n  function AuthInterceptorService(authService) {\n    _classCallCheck(this, AuthInterceptorService);\n\n    this.authService = authService;\n  }\n\n  _createClass(AuthInterceptorService, [{\n    key: \"intercept\",\n    value: function intercept(request, next) {\n      var token = this.authService.getAuthToken();\n\n      if (token) {\n        // If we have a token, we set it to the header\n        request = request.clone({\n          headers: request.headers.append('Authorization', 'Bearer ' + token)\n        });\n      }\n\n      return next.handle(request);\n    }\n  }]);\n\n  return AuthInterceptorService;\n}();\nexport var AddHeaderInterceptor = /*#__PURE__*/function () {\n  function AddHeaderInterceptor(http) {\n    _classCallCheck(this, AddHeaderInterceptor);\n\n    this.http = http;\n    this.cache = new Map();\n    this.token = \"\";\n  }\n\n  _createClass(AddHeaderInterceptor, [{\n    key: \"intercept\",\n    value: function intercept(req, next) {\n      var _this = this;\n\n      // Clone the request to add the new header\n      if (req.url.includes(\"token\")) {\n        return next.handle(req).pipe(map(function (event) {\n          if (event instanceof HttpResponse) {\n            // console.log(event.clone().body.secret);\n            _this.token = event.clone().body.secret;\n          }\n\n          return event;\n        }));\n      }\n\n      var clonedRequest = req.clone({\n        headers: req.headers.append('Authorization', 'Bearer ' + \"\")\n      }); // Pass the cloned request instead of the original request to the next handle\n      // return next.handle(req);\n\n      return next.handle(clonedRequest);\n    }\n  }]);\n\n  return AddHeaderInterceptor;\n}();","map":null,"metadata":{},"sourceType":"module"}